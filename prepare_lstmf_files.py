import os
import subprocess

# KlasÃ¶r yollarÄ±nÄ± belirleme
desktop_path = os.path.expanduser("~/Desktop")  # MasaÃ¼stÃ¼ yolu
dataset_dir = os.path.join(desktop_path, "prepared_dataset")  # Ana klasÃ¶r

# KlasÃ¶rlerin tanÄ±mlanmasÄ±
image_dir = dataset_dir  # .tif dosyalarÄ± burada
box_dir = dataset_dir    # .box dosyalarÄ± burada
txt_dir = dataset_dir    # .gt.txt dosyalarÄ± burada
output_dir = os.path.join(dataset_dir, "lstmf_output")  # Ã‡Ä±ktÄ± klasÃ¶rÃ¼

# EÄŸer lstmf_output klasÃ¶rÃ¼ yoksa oluÅŸtur
os.makedirs(output_dir, exist_ok=True)

# prepared_dataset klasÃ¶rÃ¼ndeki tÃ¼m .tif dosyalarÄ±nÄ± iÅŸle
for filename in os.listdir(image_dir):
    if filename.endswith(".tif"):  # Sadece .tif dosyalarÄ± seÃ§
        base_name = os.path.splitext(filename)[0]
        
        tif_file = os.path.join(image_dir, filename)
        box_file = os.path.join(box_dir, base_name + ".box")
        txt_file = os.path.join(txt_dir, base_name + ".gt.txt")
        lstmf_file = os.path.join(output_dir, base_name + ".lstmf")

        # EÄŸer hem .box hem .gt.txt dosyalarÄ± varsa devam et
        if os.path.exists(box_file) and os.path.exists(txt_file):
            print(f"ğŸ“„ Ä°ÅŸleniyor: {filename}")

            # Tesseract komutunu oluÅŸtur
            command = [
                "tesseract",
                tif_file,
                "training",
                "--psm", "6",
                "--oem", "1", 
                "lstm.train" 
            ]

            # Ã‡Ä±ktÄ±yÄ± lstmf dosyasÄ±na yÃ¶nlendir
            with open(lstmf_file, "wb") as f:
                subprocess.run(command, stdout=f, stderr=subprocess.DEVNULL)

            print(f"âœ… {lstmf_file} oluÅŸturuldu.")
        else:
            # Eksik dosyalarÄ± gÃ¶ster
            if not os.path.exists(box_file):
                print(f"âš  Eksik .box dosyasÄ±: {box_file}")
            if not os.path.exists(txt_file):
                print(f"âš  Eksik .gt.txt dosyasÄ±: {txt_file}")

print("\nâœ… TÃ¼m .lstmf dosyalarÄ± baÅŸarÄ±yla oluÅŸturuldu!")
